// Copyright Â© 2017 The Things Network
// Use of this source code is governed by the MIT license that can be found in the LICENCE file.

/* @flow */
/* eslint-disable */
// Code generated by protoc-gen-flowtypes DO NOT EDIT.
// InputID: 7245445fba585f1d1772f72b788c509e15ef768f

export type DownlinkOption = {
  identifier?: string,
  gateway_id?: string,
  score?: number,
  deadline?: number,
  protocol_config?: TxConfiguration,
  gateway_config?: TxConfiguration
};

export type UplinkMessage = {
  payload?: string,
  message?: Message,
  dev_eui?: string,
  app_eui?: string,
  app_id?: string,
  dev_id?: string,
  protocol_metadata?: RxMetadata,
  gateway_metadata?: RxMetadata,
  downlink_options?: Array<DownlinkOption>,
  trace?: Trace
};

export type DownlinkMessage = {
  payload?: string,
  message?: Message,
  dev_eui?: string,
  app_eui?: string,
  app_id?: string,
  dev_id?: string,
  downlink_option?: DownlinkOption,
  trace?: Trace
};

export type DeviceActivationResponse = {
  payload?: string,
  message?: Message,
  downlink_option?: DownlinkOption,
  trace?: Trace
};

export type DeduplicatedUplinkMessage = {
  payload?: string,
  message?: Message,
  dev_eui?: string,
  app_eui?: string,
  app_id?: string,
  dev_id?: string,
  protocol_metadata?: RxMetadata,
  gateway_metadata?: Array<RxMetadata>,
  server_time?: number,
  response_template?: DownlinkMessage,
  trace?: Trace
};

export type DeviceActivationRequest = {
  payload?: string,
  message?: Message,
  dev_eui?: string,
  app_eui?: string,
  protocol_metadata?: RxMetadata,
  gateway_metadata?: RxMetadata,
  activation_metadata?: ActivationMetadata,
  downlink_options?: Array<DownlinkOption>,
  trace?: Trace
};

export type DeduplicatedDeviceActivationRequest = {
  payload?: string,
  message?: Message,
  dev_eui?: string,
  app_eui?: string,
  app_id?: string,
  dev_id?: string,
  protocol_metadata?: RxMetadata,
  gateway_metadata?: Array<RxMetadata>,
  activation_metadata?: ActivationMetadata,
  server_time?: number,
  response_template?: DeviceActivationResponse,
  trace?: Trace
};

export type ActivationChallengeRequest = {
  payload?: string,
  message?: Message,
  dev_eui?: string,
  app_eui?: string,
  app_id?: string,
  dev_id?: string
};

export type ActivationChallengeResponse = {
  payload?: string,
  message?: Message
};

export type SubscribeRequest = {

};

export type StatusRequest = {

};

export type Status = {
  system?: SystemStats,
  component?: ComponentStats,
  uplink?: Rates,
  uplink_unique?: Rates,
  downlink?: Rates,
  activations?: Rates,
  activations_unique?: Rates,
  deduplication?: Percentiles,
  connected_routers?: number,
  connected_handlers?: number
};

export type ApplicationHandlerRegistration = {
  app_id?: string,
  handler_id?: string
};


