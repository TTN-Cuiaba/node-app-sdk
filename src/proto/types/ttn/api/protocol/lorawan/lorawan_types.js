// Copyright Â© 2017 The Things Network
// Use of this source code is governed by the MIT license that can be found in the LICENCE file.

/* @flow */
/* eslint-disable */
// Code generated by protoc-gen-flowtypes DO NOT EDIT.
// InputID: 5ac508c986f9084661cbf8d6a516b6569655d8fc

export type Modulation = "FSK";

export type FrequencyPlan = "US_902_928" | "CN_779_787" | "EU_433" | "AU_915_928" | "CN_470_510" | "AS_923" | "AS_920_923" | "AS_923_925" | "KR_920_923" | "IN_865_867";

export type Major = {};

export type MType = "JOIN_ACCEPT" | "UNCONFIRMED_UP" | "UNCONFIRMED_DOWN" | "CONFIRMED_UP" | "CONFIRMED_DOWN";

export type Metadata = {
  modulation?: Modulation,
  data_rate?: string,
  bit_rate?: number,
  coding_rate?: string,
  f_cnt?: number,
  frequency_plan?: FrequencyPlan
};

export type TxConfiguration = {
  modulation?: Modulation,
  data_rate?: string,
  bit_rate?: number,
  coding_rate?: string,
  f_cnt?: number
};

export type ActivationMetadata = {
  app_eui?: string,
  dev_eui?: string,
  dev_addr?: string,
  nwk_s_key?: string,
  rx1_dr_offset?: number,
  rx2_dr?: number,
  rx_delay?: number,
  cf_list?: CFList,
  frequency_plan?: FrequencyPlan
};

export type Message = {
  m_hdr?: MHDR,
  mic?: string,
  mac_payload?: MACPayload,
  join_request_payload?: JoinRequestPayload,
  join_accept_payload?: JoinAcceptPayload
};

export type MHDR = {
  m_type?: MType,
  major?: Major
};

export type MACPayload = {
  f_hdr?: FHDR,
  f_port?: number,
  frm_payload?: string
};

export type FHDR = {
  dev_addr?: string,
  f_ctrl?: FCtrl,
  f_cnt?: number,
  f_opts?: Array<MACCommand>
};

export type FCtrl = {
  adr?: boolean,
  adr_ack_req?: boolean,
  ack?: boolean,
  f_pending?: boolean
};

export type MACCommand = {
  cid?: number,
  payload?: string
};

export type JoinRequestPayload = {
  app_eui?: string,
  dev_eui?: string,
  dev_nonce?: string
};

export type JoinAcceptPayload = {
  encrypted?: string,
  app_nonce?: string,
  net_id?: string,
  dev_addr?: string,
  dl_settings?: DLSettings,
  rx_delay?: number,
  cf_list?: CFList
};

export type DLSettings = {
  rx1_dr_offset?: number,
  rx2_dr?: number
};

export type CFList = {
  freq?: Array<number>
};


